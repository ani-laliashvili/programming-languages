# -*- coding: utf-8 -*-
"""Copy of Programming_Languages_(start).ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1tQZUnCOns7dYbkvP_3CzOJIvV2nckXI0

## Get the Data

Follow this link to run the query from [StackExchange](https://data.stackexchange.com/stackoverflow/query/675441/popular-programming-languages-per-over-time-eversql-com) to get your own .csv file

<code>
select dateadd(month, datediff(month, 0, q.CreationDate), 0) m, TagName, count(*)
from PostTags pt
join Posts q on q.Id=pt.PostId
join Tags t on t.Id=pt.TagId
where TagName in ('java','c','c++','python','c#','javascript','assembly','php','perl','ruby','visual basic','swift','r','object-c','scratch','go','swift','delphi')
and q.CreationDate < dateadd(month, datediff(month, 0, getdate()), 0)
group by dateadd(month, datediff(month, 0, q.CreationDate), 0), TagName
order by dateadd(month, datediff(month, 0, q.CreationDate), 0)
</code>

## Import Statements
"""

import pandas as pd
import matplotlib.pyplot as plt

"""## Data Exploration

Read the .csv file and store it in a Pandas dataframe
"""

data = pd.read_csv('QueryResults.csv')
data.columns = ['DATE', 'TAG', 'posts']

"""Examine the first 5 rows and the last 5 rows of the of the dataframe"""

data.head()

"""Check the dimensions of the dataframe"""

data.shape

type(data)

"""Calculate the total number of post per language."""

grouped_df = data.groupby('TAG')
grouped_df.sum()

"""How many months of data exist per language? Which language had the fewest months with an entry? 

"""

grouped_df.count()

"""## Data Cleaning

Let's fix the date format to make it more readable. We need to use Pandas to change format from a string of "2008-07-01 00:00:00" to a datetime object with the format of "2008-07-01"
"""

data.DATE = pd.to_datetime(data.DATE, format='%Y-%m-%d')

data.head()

"""## Data Manipulation


"""

reshaped_df = data.pivot(index='DATE', columns='TAG', values='posts')

reshaped_df.shape

reshaped_df.head()

reshaped_df.fillna(0, inplace=True)
reshaped_df.head()

"""Count the number of entries per programming language. """

data.groupby('TAG').sum()

reshaped_df.isna().values.any()

"""## Data Visualisaton with with Matplotlib

"""

plt.figure(figsize=(16,10))
plt.xticks(fontsize=14)
plt.yticks(fontsize=14)
plt.xlabel('Date', fontsize=14)
plt.ylabel('Number of Posts', fontsize=14)
plt.ylim(0, 40000)

for column in reshaped_df.columns:
  plt.plot(reshaped_df.index, reshaped_df[column], linewidth=3, label=reshaped_df[column].name)  

plt.legend(fontsize=16)

"""**Challenge**: Show two line (e.g. for Java and Python) on the same chart."""



"""# Smoothing out Time Series Data

 To better see a trend we can plot an average of, say 6 or 12 observations. 
"""

roll_df = reshaped_df.rolling(window=6).mean()

plt.figure(figsize=(16,10))
plt.xticks(fontsize=14)
plt.yticks(fontsize=14)
plt.xlabel('Date', fontsize=14)
plt.ylabel('Number of Posts', fontsize=14)
plt.ylim(0, 35000)
 
# plot the roll_df instead
for column in roll_df.columns:
    plt.plot(roll_df.index, roll_df[column], 
             linewidth=3, label=roll_df[column].name)
 
plt.legend(fontsize=16)